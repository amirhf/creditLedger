name: Deploy to Staging

on:
  push:
    branches: [staging]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service:
          - accounts
          - ledger
          - orchestrator
          - readmodel
          - gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/creditledger-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=sha
            staging

      - name: Determine Dockerfile path
        id: dockerfile
        run: |
          if [ "${{ matrix.service }}" = "gateway" ]; then
            echo "path=services/gateway/Dockerfile" >> $GITHUB_OUTPUT
          else
            echo "path=Dockerfile.${{ matrix.service }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ steps.dockerfile.outputs.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    strategy:
      matrix:
        service:
          - accounts
          - ledger
          - orchestrator
          - readmodel
          - gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: |
          flyctl deploy \
            --app creditledger-${{ matrix.service }}-staging \
            --config fly-configs/fly.${{ matrix.service }}.toml \
            --image ${{ env.REGISTRY }}/${{ github.repository_owner }}/creditledger-${{ matrix.service }}:staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  health-check:
    runs-on: ubuntu-latest
    needs: deploy
    strategy:
      matrix:
        service:
          - accounts
          - ledger
          - orchestrator
          - readmodel
          - gateway

    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Check health endpoint
        run: |
          ENDPOINT="https://creditledger-${{ matrix.service }}-staging.fly.dev"
          HEALTH_PATH="/healthz"
          
          if [ "${{ matrix.service }}" = "gateway" ]; then
            HEALTH_PATH="/health"
          fi
          
          curl -f "$ENDPOINT$HEALTH_PATH" || exit 1

      - name: Notify on failure
        if: failure()
        run: echo "Health check failed for ${{ matrix.service }}"
