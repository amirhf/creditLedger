{
  "info": {
    "name": "Credit Ledger Gateway API",
    "description": "Complete API tests for the Gateway service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "gateway_url",
      "value": "http://localhost:4000",
      "type": "string"
    },
    {
      "key": "account_a_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "account_b_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "transfer_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{gateway_url}}/healthz",
          "host": ["{{gateway_url}}"],
          "path": ["healthz"]
        }
      }
    },
    {
      "name": "1. Create Account A",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Response has account_id', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('account_id');",
              "    pm.collectionVariables.set('account_a_id', jsonData.account_id);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"currency\": \"USD\"\n}"
        },
        "url": {
          "raw": "{{gateway_url}}/accounts",
          "host": ["{{gateway_url}}"],
          "path": ["accounts"]
        }
      }
    },
    {
      "name": "2. Create Account B",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Response has account_id', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('account_id');",
              "    pm.collectionVariables.set('account_b_id', jsonData.account_id);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"currency\": \"USD\"\n}"
        },
        "url": {
          "raw": "{{gateway_url}}/accounts",
          "host": ["{{gateway_url}}"],
          "path": ["accounts"]
        }
      }
    },
    {
      "name": "3. Get Account A Details",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{gateway_url}}/accounts/{{account_a_id}}",
          "host": ["{{gateway_url}}"],
          "path": ["accounts", "{{account_a_id}}"]
        }
      }
    },
    {
      "name": "4. Create Transfer",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 202', function () {",
              "    pm.response.to.have.status(202);",
              "});",
              "",
              "pm.test('Response has transfer_id', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('transfer_id');",
              "    pm.collectionVariables.set('transfer_id', jsonData.transfer_id);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"from_account_id\": \"{{account_a_id}}\",\n  \"to_account_id\": \"{{account_b_id}}\",\n  \"amount_minor\": 5000,\n  \"currency\": \"USD\",\n  \"idempotency_key\": \"postman-test-{{$randomUUID}}\"\n}"
        },
        "url": {
          "raw": "{{gateway_url}}/transfers",
          "host": ["{{gateway_url}}"],
          "path": ["transfers"]
        }
      }
    },
    {
      "name": "5. Get Transfer Details",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{gateway_url}}/transfers/{{transfer_id}}",
          "host": ["{{gateway_url}}"],
          "path": ["transfers", "{{transfer_id}}"]
        }
      }
    },
    {
      "name": "6. Get Account A Balance",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{gateway_url}}/accounts/{{account_a_id}}/balance",
          "host": ["{{gateway_url}}"],
          "path": ["accounts", "{{account_a_id}}", "balance"]
        }
      }
    },
    {
      "name": "7. Get Account B Balance",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{gateway_url}}/accounts/{{account_b_id}}/balance",
          "host": ["{{gateway_url}}"],
          "path": ["accounts", "{{account_b_id}}", "balance"]
        }
      }
    },
    {
      "name": "8. Get Account A Statements",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{gateway_url}}/accounts/{{account_a_id}}/statements?limit=10",
          "host": ["{{gateway_url}}"],
          "path": ["accounts", "{{account_a_id}}", "statements"],
          "query": [
            {
              "key": "limit",
              "value": "10"
            }
          ]
        }
      }
    },
    {
      "name": "Validation: Invalid Currency",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"currency\": \"US\"\n}"
        },
        "url": {
          "raw": "{{gateway_url}}/accounts",
          "host": ["{{gateway_url}}"],
          "path": ["accounts"]
        }
      }
    },
    {
      "name": "Validation: Invalid UUID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{gateway_url}}/accounts/invalid-uuid",
          "host": ["{{gateway_url}}"],
          "path": ["accounts", "invalid-uuid"]
        }
      }
    },
    {
      "name": "Validation: Same Account Transfer",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"from_account_id\": \"{{account_a_id}}\",\n  \"to_account_id\": \"{{account_a_id}}\",\n  \"amount_minor\": 1000,\n  \"currency\": \"USD\",\n  \"idempotency_key\": \"same-account-test\"\n}"
        },
        "url": {
          "raw": "{{gateway_url}}/transfers",
          "host": ["{{gateway_url}}"],
          "path": ["transfers"]
        }
      }
    }
  ]
}
