version: "3.9"


services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.5
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp
      - "1"
      - --memory
      - 1G
      - --reserve-memory
      - 0M
      - --node-id
      - "0"
      - --check=false
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:9092,PLAINTEXT_HOST://localhost:19092
    ports: ["19092:19092", "9092:9092"]


  console:
    image: docker.redpanda.com/redpandadata/console:v2.7.2
    depends_on: [redpanda]
    environment:
      KAFKA_BROKERS: redpanda:9092
    ports: ["8080:8080"]


  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]


  postgres-accounts:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ledgerpw}
      POSTGRES_USER: ${POSTGRES_USER:-ledger}
      POSTGRES_DB: ${POSTGRES_DB_ACCOUNTS:-accounts}
    ports: ["5433:5432"]


  postgres-ledger:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ledgerpw}
      POSTGRES_USER: ${POSTGRES_USER:-ledger}
      POSTGRES_DB: ${POSTGRES_DB_LEDGER:-ledger}
    ports: ["5434:5432"]


  postgres-readmodel:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ledgerpw}
      POSTGRES_USER: ${POSTGRES_USER:-ledger}
      POSTGRES_DB: ${POSTGRES_DB_READMODEL:-readmodel}
    ports: ["5435:5432"]


  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports: ["16686:16686", "4317:4317", "4318:4318"]


  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9090:9090"]


  grafana:
    image: grafana/grafana:11.1.4
    ports: ["3000:3000"]
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
      GF_INSTALL_PLUGINS: ""
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus

  accounts:
    build: ../services/accounts
    environment:
      PORT: 7101
      DATABASE_URL: postgres://ledger:${POSTGRES_PASSWORD:-ledgerpw}@postgres-accounts:5432/${POSTGRES_DB_ACCOUNTS:-accounts}?sslmode=disable
    depends_on: [postgres-accounts]
    ports: ["7101:7101"]


  ledger-svc:
    build: ../services/ledger
    environment:
      PORT: 7102
      DATABASE_URL: postgres://ledger:${POSTGRES_PASSWORD:-ledgerpw}@postgres-ledger:5432/${POSTGRES_DB_LEDGER:-ledger}?sslmode=disable
      KAFKA_BROKERS: redpanda:9092
    depends_on: [postgres-ledger, redpanda]
    ports: ["7102:7102"]


  orchestrator:
    build: ../services/posting-orchestrator
    environment:
      PORT: 7103
      REDIS_URL: redis://redis:6379
      LEDGER_URL: http://ledger-svc:7102
    depends_on: [redis, ledger-svc]
    ports: ["7103:7103"]


  read-model:
    build: ../services/read-model
    environment:
      PORT: 7104
      DATABASE_URL: postgres://ledger:${POSTGRES_PASSWORD:-ledgerpw}@postgres-readmodel:5432/${POSTGRES_DB_READMODEL:-readmodel}?sslmode=disable
      KAFKA_BROKERS: redpanda:9092
    depends_on: [postgres-readmodel, redpanda]
    ports: ["7104:7104"]


  gateway:
    build: ../services/gateway
    environment:
      PORT: 4000
      ORCHESTRATOR_URL: http://orchestrator:7103
    depends_on: [orchestrator]
    ports: ["4000:4000"]